{"version":3,"file":"react-spectrum.js","sources":["../node_modules/tslib/tslib.es6.js","../src/utils/arraysEqual.ts","../src/utils/getRandomInRange.ts","../src/utils/getWords.ts","../src/usePrevious.tsx","../src/DrawLine.tsx","../src/Spectrum.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function arraysEqual(\n  a: Array<string | number>,\n  b: Array<string | number>,\n): boolean {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  const sortedA = [...a].sort();\n  const sortedB = [...b].sort();\n  for (let i = 0; i < sortedA.length; i += 1) {\n    if (sortedA[i] !== sortedB[i]) return false;\n  }\n\n  return true;\n}\n\nexport default arraysEqual;\n","function getRandomInRange(min: number, max: number): number {\n  const mn = Math.ceil(min);\n  const mx = Math.floor(max);\n\n  return Math.floor(Math.random() * (mx - mn + 1)) + mn;\n}\n\nexport default getRandomInRange;\n","import getRandomInRange from './getRandomInRange';\n\nconst getWords = ({\n  width,\n  colors,\n  wordWidths,\n  wordDistances,\n  truncate,\n}: {\n  width: number;\n  colors: Array<string>;\n  wordWidths: Array<number>;\n  wordDistances: Array<number>;\n  truncate: boolean;\n}): Array<{ width: number; distance: number; background: string }> => {\n  const minWordWidth = Math.min(...wordWidths);\n  const maxWordsPerLine = Math.floor(width / minWordWidth);\n  const wordForLine = getRandomInRange(\n    Math.max(\n      0,\n      truncate ? 1 : maxWordsPerLine - Math.floor(maxWordsPerLine / 2),\n    ),\n    truncate ? Math.floor(maxWordsPerLine / 2) : maxWordsPerLine,\n  );\n\n  const words = [];\n  let totalWidth = 0;\n  for (let i = 0; i < wordForLine; i += 1) {\n    const pillWidth = wordWidths[getRandomInRange(0, wordWidths.length - 1)];\n    const pillDistance =\n      wordDistances[getRandomInRange(0, wordDistances.length - 1)];\n\n    if (totalWidth + pillWidth + pillDistance > width) {\n      break;\n    } else {\n      totalWidth += pillWidth + pillDistance;\n    }\n\n    const background = colors[getRandomInRange(0, colors.length - 1)];\n    words.push({ width: pillWidth, distance: pillDistance, background });\n  }\n\n  return words;\n};\n\nexport default getWords;\n","import { useRef, useEffect } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction usePrevious(value: any): any {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n\nexport default usePrevious;\n","import React, { memo, useEffect, useState } from 'react';\nimport arraysEqual from './utils/arraysEqual';\nimport getWords from './utils/getWords';\nimport usePrevious from './usePrevious';\n\ninterface DrawLineProps {\n  width: number;\n  colors: Array<string>;\n  wordWidths: Array<number>;\n  wordDistances: Array<number>;\n  truncate: boolean;\n  wordHeight: number;\n  lineDistance: number;\n}\n\nconst DrawLine = ({\n  width,\n  colors,\n  wordWidths,\n  wordDistances,\n  wordHeight,\n  lineDistance,\n  truncate,\n}: DrawLineProps): React.ReactElement => {\n  const previous = usePrevious({\n    width,\n    colors,\n    wordWidths,\n    wordDistances,\n    wordHeight,\n    lineDistance,\n    truncate,\n  });\n  const [words, setWords] = useState(() =>\n    getWords({\n      width,\n      colors,\n      wordWidths,\n      wordDistances,\n      truncate,\n    }),\n  );\n\n  useEffect(() => {\n    // Handle props update on the runtime\n    // Memo isn't helping here as props contains array\n    // whose reference might change on every re-render\n    if (\n      previous &&\n      (previous.width !== width ||\n        previous.wordHeight !== wordHeight ||\n        previous.lineDistance !== lineDistance ||\n        previous.truncate !== truncate ||\n        !arraysEqual(previous.wordWidths, wordWidths) ||\n        !arraysEqual(previous.wordDistances, wordDistances) ||\n        !arraysEqual(previous.colors, colors))\n    ) {\n      const newWords = getWords({\n        width,\n        colors,\n        wordWidths,\n        wordDistances,\n        truncate,\n      });\n\n      setWords(newWords);\n    }\n  }, [\n    previous,\n    width,\n    colors,\n    wordWidths,\n    wordDistances,\n    truncate,\n    wordHeight,\n    lineDistance,\n  ]);\n\n  return (\n    <>\n      {words.map(({ width: w, distance, background }, i) => (\n        <span\n          key={i}\n          style={{\n            width: w,\n            marginRight: distance,\n            height: wordHeight,\n            background,\n            display: 'inline-block',\n            borderRadius: Math.max(...wordWidths),\n            marginBottom: lineDistance,\n          }}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default memo(DrawLine);\n","import React, { memo } from 'react';\nimport DrawLine from './DrawLine';\n\ntype SpectrumProps = {\n  /**\n   * Width of the placeholder container\n   */\n  width?: number;\n  /**\n   * Possible colors of words, will be picked randomly\n   */\n  colors?: Array<string>;\n  /**\n   * Possible widths of words, will be picked randomly\n   */\n  wordWidths?: Array<number>;\n  /**\n   * Possible distance between words, will be picked randomly\n   */\n  wordDistances?: Array<number>;\n  /**\n   * Height of every word placeholder\n   */\n  wordHeight?: number;\n  /**\n   * Distance(margin) between the lines\n   */\n  lineDistance?: number;\n  /**\n   * Lines per paragraph\n   * if there are multiple paragraphs, all of them will have same number of lines\n   */\n  linesPerParagraph?: number;\n  /**\n   * Number of paragraphs in the placeholder\n   */\n  paragraphs?: number;\n  /**\n   * Distance(margin) between the paragraphs\n   */\n  paragraphDistance?: number;\n  /**\n   * Show less words in the last line for more natural feel\n   */\n  truncateLastLine?: boolean;\n};\n\nconst Spectrum = ({\n  width = 500,\n  colors = ['#eee'],\n  wordWidths = [30, 60, 90, 120, 150],\n  wordDistances = [4, 8, 12],\n  linesPerParagraph = 8,\n  wordHeight = 12,\n  lineDistance = 12,\n  paragraphs = 1,\n  paragraphDistance = 24,\n  truncateLastLine = true,\n}: SpectrumProps): React.ReactElement => {\n  return (\n    <>\n      {new Array(paragraphs).fill(true).map((_, i) => {\n        const lines = new Array(linesPerParagraph).fill(true).map((__, j) => (\n          <div data-line={j} key={j}>\n            <DrawLine\n              width={width}\n              colors={colors}\n              wordWidths={wordWidths}\n              wordDistances={wordDistances}\n              wordHeight={wordHeight}\n              lineDistance={lineDistance}\n              truncate={truncateLastLine ? j === linesPerParagraph - 1 : false}\n            />\n          </div>\n        ));\n\n        return (\n          <div\n            data-paragraph={i}\n            key={i}\n            style={{\n              marginBottom: paragraphDistance,\n              fontSize: 0,\n            }}>\n            {lines}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default memo(Spectrum);\n"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","arraysEqual","b","sortedA","sort","sortedB","getRandomInRange","min","max","mn","Math","ceil","mx","floor","random","getWords","_a","width","colors","wordWidths","wordDistances","truncate","minWordWidth","maxWordsPerLine","wordForLine","words","totalWidth","pillWidth","pillDistance","background","push","distance","usePrevious","value","ref","useRef","useEffect","current","DrawLine","wordHeight","lineDistance","previous","_b","setWords","newWords","React","map","w","key","style","marginRight","height","display","borderRadius","marginBottom","memo","Spectrum","_c","_d","_e","_f","linesPerParagraph","_g","_h","_j","paragraphs","_k","paragraphDistance","_l","truncateLastLine","fill","_","lines","__","fontSize"],"mappings":"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"}